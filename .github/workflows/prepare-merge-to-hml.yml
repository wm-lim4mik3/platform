name: Prepare PR to merge

on:
  pull_request:
    types: 
      - opened
      - edited
      - reopened
    branches:
      - hml	

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci
  
  checker:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Node Modules Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Run Biome checker
        run: npx biome check ./src

  typecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Node Modules Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Run TypeScript Typechecker
        run: npx tsc --noEmit

  coverage-test:
    if: ${{ true }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Node Modules Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Run Tests with Coverage
        run: npm run test:coverage
  
  chromatic:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config Node Environment
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Node Modules Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-${{ runner.os }}-

      - name: Run Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
          onlyChanged: true
